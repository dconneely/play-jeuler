package problem2;

/**
 * -
 * <h3>Even Fibonacci numbers</h3>
 * <h4>Problem 2</h4>
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10
 * terms will be:
 * <blockquote>1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...</blockquote>
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued
 * terms.
 */
public class EvenFibonacciNumbers_0 {
    public static void main(String[] args) {
        System.out.println(sum(4_000_000));
    }

    // upperBound is inclusive.
    static long sum(int upperBound) {
        int m2 = 0;
        int m1 = 1;
        long sum = 0L;
        while (true) {
            int val = m2 + m1;
            if (val > upperBound) {
                return sum;
            }
            if (val % 2 == 0) {
                sum += val;
            }
            m2 = m1;
            m1 = val;
        }
    }
}
